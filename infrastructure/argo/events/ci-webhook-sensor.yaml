apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: code-pushed-sensor
  labels:
    sensors.argoproj.io/sensor-controller-instanceid: argo-events
spec:
  template:
    spec:
      containers:
        - name: sensor
          image: argoproj/sensor:v0.14.0
          imagePullPolicy: Always
      serviceAccountName: argo-events-sa
  dependencies:
    - name: code-pushed
      gatewayName: code-pushed-gateway
      eventName: codePushed
  subscription:
    http:
      port: 9300
  triggers:
    - template:
        name: build-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: demo-ci-
              spec:
                entrypoint: demo-ci
                arguments:
                  parameters:
                  - name: repo
                    value: SET_FROM_PARAMETER
                  - name: revision
                    value: SET_FROM_PARAMETER

                templates:
                - name: demo-ci
                  steps:
                  - - name: build
                      template: build
                      when: "{{workflow.parameters.revision}} != 0000000000000000000000000000000000000000" # No commit SHA = only tag was pushed

                - name: build
                  container:
                    image: docker:17.10
                    command: [sh, -c]
                    args: ["
                      until docker ps; 
                      do sleep 3; 
                      done;
                      docker build -t demowebapp:{{workflow.parameters.revision}} {{workflow.parameters.repo}}#{{workflow.parameters.revision}}
                    "]
                    env:
                    - name: DOCKER_HOST               # the docker daemon can be access on the standard port on localhost
                      value: 127.0.0.1
                  sidecars:
                  - name: dind
                    image: docker:17.10-dind          # Docker already provides an image for running a Docker daemon
                    securityContext:
                      privileged: true                # the Docker daemon can only run in a privileged container
                    # mirrorVolumeMounts will mount the same volumes specified in the main container
                    # to the sidecar (including artifacts), at the same mountPaths. This enables
                    # dind daemon to (partially) see the same filesystem as the main container in
                    # order to use features such as docker volume binding.
                    mirrorVolumeMounts: true

      # Apply parameters at the template level.
      parameters:
        - src:
            dependencyName: code-pushed
            dataKey: repository.clone_url
          dest: k8s.source.resource.spec.arguments.0.value
        - src:
            dependencyName: code-pushed
            dataKey: after # The commit SHA after push
          dest: k8s.source.resource.spec.arguments.1.value