apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: code-pushed-sensor
  labels:
    sensors.argoproj.io/sensor-controller-instanceid: argo-events
spec:
  template:
    spec:
      containers:
        - name: sensor
          image: argoproj/sensor:v0.15.0
          imagePullPolicy: Always
      serviceAccountName: argo-events-sa
  dependencies:
    - name: code-pushed
      gatewayName: code-pushed-gateway
      eventName: codePushed
  subscription:
    http:
      port: 9300
  triggers:
    - template:
        name: build-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: demo-ci-
              spec:
                serviceAccountName: argo-events-sa
                entrypoint: demo-ci
                arguments:
                  parameters:
                  - name: git_url
                    value: SET_FROM_PARAMETER
                  - name: ref
                    value: SET_FROM_PARAMETER
                  - name: commits
                    value: SET_FROM_PARAMETER
                  - name: version
                    value: "1.1"

                templates:
                - name: demo-ci
                  dag:
                    tasks:
                    - name: is-tag
                      template: is-tag
                    - name: commit-contains-only-ignored-files
                      dependencies: [is-tag]
                      template: commit-contains-only-ignored-files
                      when: "{{tasks.is-tag.outputs.result}} == false"
                    - name: build
                      dependencies: [commit-contains-only-ignored-files]
                      template: build
                      # This should be improved when more enhanced dependency logic is available, https://github.com/argoproj/argo/pull/2673
                      when: "{{tasks.is-tag.outputs.result}} == false && {{tasks.commit-contains-only-ignored-files.outputs.result}} == false"
                    - name: update-chart-image-tag
                      dependencies: [build]
                      template: update-chart-image-tag
                      # This should be improved when more enhanced dependency logic is available, https://github.com/argoproj/argo/pull/2673
                      when: "{{tasks.is-tag.outputs.result}} == false && {{tasks.commit-contains-only-ignored-files.outputs.result}} == false"
                  
                - name: is-tag
                  script:
                    image: alpine:3.9.6
                    command: [sh]
                    source: |
                      case {{workflow.parameters.ref}} in refs/tags/*) echo true;; *) echo false;; esac;

                  # Ignore commits to chart directory since it does not affect the build output.
                  # - This CI process commits image tag version to files in the chart directory, and we do not want to trigger endless builds
                  # - Argo CD will react to changes in the chart directory
                - name: commit-contains-only-ignored-files
                  script:
                    image: endeveit/docker-jq:latest
                    command: [sh, -c]
                    args: ["
                      echo '{{workflow.parameters.commits}}' | jq '[.[] | .added + .removed + .modified] | flatten | all(startswith(\"helm/\"))';
                    "]

                - name: build
                  container:
                    image: gcr.io/kaniko-project/executor:v0.15.0
                    args: ["--dockerfile=Dockerfile",
                          "--context={{workflow.parameters.git_url}}#{{workflow.parameters.ref}}",
                          "--destination=docker-registry.default:5000/demo:{{workflow.parameters.version}}",
                          "--insecure"]

                - name: update-chart-image-tag
                  inputs:
                    artifacts:
                    - name: chart-source
                      path: /src
                      git:
                        repo: https://github.com/Fresa/argo-continues-delivery-demo.git
                        revision: master
                  container:
                    image: dave08/docker-yq-git:latest
                    command: [sh, -c]
                    args:
                      - yq w -i helm/values-test.yaml image.tag {{workflow.parameters.version}};

                        git config user.email "<>";
                        git config user.name "Argo CI";

                        git remote set-url origin "https://$(GIT_API_KEY):x-oauth-basic@github.com/Fresa/argo-continues-delivery-demo.git";
 
                        git add .;
                        git commit -m "Update image to v{{workflow.parameters.version}}";
                        git push origin master --tags --quiet;
                    workingDir: /src
                    env:
                    - name: GIT_API_KEY
                      valueFrom:
                        secretKeyRef:
                          name: git-api-key
                          key: key

      # Apply parameters at the template level.
      parameters:
        - src:
            dependencyName: code-pushed
            dataKey: body.repository.git_url
          dest: k8s.source.resource.spec.arguments.parameters.0.value
        - src:
            dependencyName: code-pushed
            dataKey: body.ref
          dest: k8s.source.resource.spec.arguments.parameters.1.value
        - src:
            dependencyName: code-pushed
            dataKey: body.commits
          dest: k8s.source.resource.spec.arguments.parameters.2.value